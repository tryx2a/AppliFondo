            *************************
            ** Installation of PNL **
            *************************

0. Dependencies

    To compile PNL, you need CMake version 2.8 at least.
        http://cmake.org/cmake/resources/software.html
    
    In addition, users should know that :

        - Linear Algebra routines mainly rely on Blas & Lapack. If these
        two libraries are not found on the machine, the versions shipped with
        PNL are used. For better performances, one should consider using
        Atlas.
        - When an MPI implementation is detected on the computer, some MPI
        bindings are available which enable to natively handle PnlObjects.

1. Windows 

    A. Binary version

        1. Extract the zip file, this will create a directory named pnl-XXX
           where XXX is the version number.
        2. Launch Visual C++ command prompt (make sure to use the 32bit
                version) and change to directory
            pnl-XXX/lib. In this directory, run
                lib.exe /def:libpnl.def /out:libpnl.lib
            This command creates the .lib file needed by Visual to link a
            project to an external library.
        4. Add the directory /path/to/pnl-XXX/include to the list of
            directories where to search for header files.
        5. Add the directory /path/to/pnl-XXX/lib to the list of
            directories where to search for external dlls.
        6. Add libpnl.lib as an additional dependency of your project
            (Properties -> Linking -> Input)
        7. Copy the files libpnl.dll, libblas.dll and liblapack.dll from
            the lib directory to the directory containing the executable file.

    B. Source version


        see below.


2. Source version

    You need CMake 2.8 for installing PNL from the source version.

     
    Per default, the make install command installs the library in the build
    directory. 

    Go to the top level directory of PNL and run.
    We advice to build the library out of the source tree.
    > mkdir build
    > cd build
    
    > cmake .. 
    > make
    > make install

    Some useful variables to modify the behaviour of cmake.

        -DPREFIX                  The path where to install the library. If
                this variable is not specified, the library is installed in
                the building directory.

        -DCMAKE_BUILD_TYPE        Release OR Debug. Default is Debug.

                Choose Debug for building a development release without
                optimization and with debugging symbols.

                Choose Release for building an optimized version.

        -DLAPACK_LIBRARIES        Full path of a Lapack library (not just its
                directory). Lapack is detected automatically but the user
                can specify a particular library.

        -DBLAS_LIBRARIES          Full path of a Blas library (not just its
                directory). Blas is detected automatically but the user
                can specify a particular library.


            Note that you must specify both BLAS_LIBRARIES and
            LAPACK_LIBRARIES or none of them.

        -DUSE_MPI                 ON/OFF. Default is ON. If ON, build the MPI
                bindings.

        -DUSE_INTERNAL_BLAS       ON/OFF. Default OFF. If ON, use the
                internal Blas & Lapack libraries shipped with the PNL
                source code.

        -DLINK_TYPE               SHARED or STATIC. Default is SHARED.
                                  Determine which type of library to build.


3. Building the documentation

    If you downloaded an official release, the documentation is already
    built in. This section is only devoted to users working with the
    development version.

    Two different types of documentation are available :

    - The user manual available both in PDF and HTML format, change to
    directory man and issue
        > make (to compile the PDF version, you need a latex compiler)
        > make html (to compile the html version, you need tex4ht)

    - The internal documentation generated using Doxygen, go to directory
    doc and run
        > make (you need to have Doxygen installed)
    
4. For any versions

    Once you have run the make install command, you will find the headers
    of the library into prefix/include/pnl and the dynamic and static
    versions of the library in prefix/lib.


If you encounter any problem or want to report some bug, contact 
Jerome Lelong <jerome.lelong@gmail.com>

vim: set ft=txt:
